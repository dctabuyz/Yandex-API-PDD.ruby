#!/usr/bin/env ruby

require 'rubygems'
require 'getoptlong'
require 'yaml'
require 'readline'
include Readline

require 'YandexPDD'

def print_help

        print "pdd_rmuser --domain example.com [--user <username>] [--password <secret>]\n"
        exit
end

def print_version

        print "pdd_rmuser version 0.1\n"
        exit
end

def print_error(e)

        puts e
        exit
end

domain    = ''
token     = ''
cert_file = ''
user      = ''
pass      = ''

config = open(ENV['HOME'] + '/.yandex_pdd') do |f|

    YAML.load(f)
end

opt = GetoptLong.new(    ['--domain', '-d', GetoptLong::REQUIRED_ARGUMENT],
                         ['--user',   '-u', GetoptLong::OPTIONAL_ARGUMENT],
                         ['--help',         GetoptLong::NO_ARGUMENT],
                         ['--version',      GetoptLong::NO_ARGUMENT]
)

opt.each_option do |name, arg|

    case name

    when '--domain'
        domain = arg

    when '--user'
        user   = arg

    when '--help'

        print_help()

    when '--version'

        print_version()
    end
end

print_error('domain not specified')                  unless (domain and domain.to_s.length > 0)
print_error("no token found for domain `#{domain}'") unless (config[domain] and config[domain]['token']) 

while (0 == user.length) do

    user = readline('username: ', true)
end

yes = ''

while (yes !~ /^yes|no$/i) do

    yes = readline('are you sure? (yes/no): ', true)
end

exit if ('yes' != yes)

pdd = Yandex::PDD::new( config[domain]['token'], config['cert_file'] )

if pdd.delete_user(user)

    print_error "user `#{user}' deleted"
else

    print_error "error: #{pdd.error[:code]} (#{pdd.error[:info]})"
end

__END__

example ~/.yandex_pdd

cert_file: /usr/local/share/certs/ca-root-nss.crt

example.com:
        token:     abcdefghijklmnopqrstuvwxyz01234567890abcdefghijklmnopqrs
